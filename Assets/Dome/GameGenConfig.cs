using System.Collections.Generic;
using System;
using UnityEngine;
using XLua;

public static class GameGenConfig  {

	//lua中要使用到C#库的配置，比如C#标准库，或者Unity API，第三方库等。
	[LuaCallCSharp]
	public static List<Type> LuaCallCSharp = new List<Type> (){
			typeof(System.Object),
			typeof(UnityEngine.Object),
			typeof(UnityEngine.Event),
			typeof(Vector2),
			typeof(Vector3),
			typeof(Vector4),
			typeof(Quaternion),
			typeof(Color),
			typeof(Ray),
			typeof(Bounds),
			typeof(Ray2D),
			typeof(Time),
			typeof(GameObject),
			typeof(Component),
			typeof(Behaviour),
			typeof(Transform),
			typeof(Resources),
			typeof(TextAsset),
			typeof(Keyframe),
			typeof(AnimationCurve),
			typeof(AnimationClip),
			typeof(MonoBehaviour),
			typeof(ParticleSystem),
			typeof(SkinnedMeshRenderer),
			typeof(Renderer),
			typeof(WWW),
			typeof(System.Collections.Generic.List<int>),
			typeof(Action<string>),
			typeof(UnityEngine.Debug),
			typeof(Resources),
			//UI
			typeof(UI2DSprite),
			typeof(UI2DSpriteAnimation),
			typeof(UIAnchor),
			typeof(UIAtlas),
			typeof(UICamera),
			typeof(UIFont),
			typeof(UIInput),
			typeof(UIInputOnGUI),
			typeof(UIPanel),
			typeof(UIRoot),
			typeof(UISprite),
			typeof(UISpriteAnimation),
			typeof(UISpriteData),
			typeof(UIStretch),
			typeof(UITextList),
			typeof(UITooltip),
			typeof(UIViewport),
			//Tweening
			typeof(AnimatedAlpha),
			typeof(AnimatedColor),
			typeof(AnimatedWidget),
			typeof(SpringPosition),
			typeof(TweenAlpha),
			typeof(TweenColor),
			typeof(TweenFOV),
			typeof(TweenHeight),
			typeof(TweenOrthoSize),
			typeof(TweenPosition),
			typeof(TweenRotation),
			typeof(TweenScale),
			typeof(TweenTransform),
			typeof(TweenVolume),
			typeof(TweenWidth),
			typeof(UITweener),
			//Internal
			typeof(ActiveAnimation),
			typeof(AnimationOrTween.Trigger),
			typeof(AnimationOrTween.Direction),
			typeof(AnimationOrTween.DisableCondition),
			typeof(AnimationOrTween.EnableCondition),
			typeof(BetterList<int>),
			typeof(BetterList<string>),
			typeof(BetterList<float>),
			typeof(BetterList<double>),
			typeof(BMFont),
			typeof(BMGlyph),
			typeof(BMSymbol),
			typeof(ByteReader),
			typeof(EventDelegate),
			typeof(EventDelegate.Parameter),
			typeof(Localization), 
			typeof(NGUIDebug),
			typeof(NGUIMath),
			typeof(NGUIText),
			typeof(NGUITools), 
			typeof(RealTime),
			typeof(SpringPanel), 
			typeof(UIEventListener),
			typeof(UIGeometry),
			typeof(UIRect),
			typeof(UISnapshotPoint), 
			//Interaction
			typeof(UIButton),
			typeof(UIButtonActivate),
			typeof(UIButtonColor),
			typeof(UIButtonKeys),
			typeof(UIButtonMessage),
			typeof(UIButtonOffset),
			typeof(UIButtonRotation),
			typeof(UIButtonScale),
			typeof(UICenterOnChild),
			typeof(UICenterOnClick),
			typeof(UIDragCamera),
			typeof(UIDragDropContainer),
			typeof(UIDragDropItem),
			typeof(UIDragDropRoot),
			typeof(UIDraggableCamera),
			typeof(UIDragObject),
			typeof(UIDragResize),
			typeof(UIDragScrollView),
			typeof(UIEventTrigger),
			typeof(UIForwardEvents),
			typeof(UIGrid),
			typeof(UIImageButton),
			typeof(UIKeyBinding),
			typeof(UIKeyNavigation),
			typeof(UIPlayAnimation),
			typeof(UIPlaySound),
			typeof(UIPlayTween),
			typeof(UIPopupList),
			typeof(UIProgressBar),
			typeof(UISavedOption),
			typeof(UIScrollBar),
			typeof(UIScrollView),
			typeof(UISlider),
			typeof(UISoundVolume),
			typeof(UITable),
			typeof(UIToggle),
			typeof(UIToggledComponents),
			typeof(UIToggledObjects),
			typeof(UIWidgetContainer),
			typeof(UIWrapContent), 
	};

	//C#静态调用Lua的配置（包括事件的原型），仅可以配delegate，interface
	[CSharpCallLua]
	public static List<Type> CSharpCallLua = new List<Type>() { 
		typeof(UnityEngine.Event),
		typeof(Action),
		typeof(Func<double, double, double>),
		typeof(Action<string>),
		typeof(Action<double>),
		typeof(Action<AssetBundle>),
		typeof(UnityEngine.Events.UnityAction),
		typeof(System.Collections.IEnumerator),
		typeof(EventDelegate.Callback),
		typeof(Localization.LoadFunction),
		typeof(Localization.OnLocalizeNotification),
		typeof(UICamera.GetKeyStateFunc),
		typeof(UICamera.GetAxisFunc),
		typeof(UICamera.OnScreenResize),
		typeof(UICamera.OnCustomInput),
		typeof(UICamera.MoveDelegate),
		typeof(UICamera.VoidDelegate),
		typeof(UICamera.BoolDelegate),
		typeof(UICamera.FloatDelegate),
		typeof(UICamera.VectorDelegate),
		typeof(UICamera.ObjectDelegate),
		typeof(UICamera.KeyCodeDelegate),
		typeof(UICamera.GetTouchCountCallback),
		typeof(UICamera.GetTouchCallback),
		typeof(UIInput.OnValidate),
		typeof(UIPanel.OnGeometryUpdated),
		typeof(UIPanel.OnClippingMoved),
		typeof(SpringPanel.OnFinished),
		typeof(UIDrawCall.OnRenderCallback), 
		typeof(UIEventListener.VoidDelegate),
		typeof(UIEventListener.BoolDelegate),
		typeof(UIEventListener.FloatDelegate),
		typeof(UIEventListener.VectorDelegate),
		typeof(UIEventListener.ObjectDelegate),
		typeof(UIEventListener.KeyCodeDelegate), 
		typeof(SpringPosition.OnFinished), 
		typeof(UICenterOnChild.OnCenterCallback),  
		typeof(UIGrid.OnReposition), 
		typeof(UIProgressBar.OnDragFinished), 
		typeof(UIScrollView.OnDragNotification), 
		typeof(UITable.OnReposition), 
		typeof(UIToggle.Validate), 
		typeof(UIWrapContent.OnInitializeItem)
	};

	//黑名单
	[BlackList]
	public static List<List<string>> BlackList = new List<List<string>>()  {
		new List<string>(){"UnityEngine.WWW", "movie"},
		new List<string>(){"UnityEngine.Texture2D", "alphaIsTransparency"},
		new List<string>(){"UnityEngine.Security", "GetChainOfTrustValue"},
		new List<string>(){"UnityEngine.CanvasRenderer", "onRequestRebuild"},
		new List<string>(){"UnityEngine.Light", "areaSize"},
		new List<string>(){"UnityEngine.AnimatorOverrideController", "PerformOverrideClipListCleanup"},
		#if !UNITY_WEBPLAYER
		new List<string>(){"UnityEngine.Application", "ExternalEval"},
		#endif
		new List<string>(){"UnityEngine.GameObject", "networkView"}, //4.6.2 not support
		new List<string>(){"UnityEngine.Component", "networkView"},  //4.6.2 not support
		new List<string>(){"System.IO.FileInfo", "GetAccessControl", "System.Security.AccessControl.AccessControlSections"},
		new List<string>(){"System.IO.FileInfo", "SetAccessControl", "System.Security.AccessControl.FileSecurity"},
		new List<string>(){"System.IO.DirectoryInfo", "GetAccessControl", "System.Security.AccessControl.AccessControlSections"},
		new List<string>(){"System.IO.DirectoryInfo", "SetAccessControl", "System.Security.AccessControl.DirectorySecurity"},
		new List<string>(){"System.IO.DirectoryInfo", "CreateSubdirectory", "System.String", "System.Security.AccessControl.DirectorySecurity"},
		new List<string>(){"System.IO.DirectoryInfo", "Create", "System.Security.AccessControl.DirectorySecurity"},
		new List<string>(){"UnityEngine.MonoBehaviour", "runInEditMode"},  
		new List<string>(){"UIInput", "ProcessEvent"},   
	};

}
